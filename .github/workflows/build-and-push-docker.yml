name: Build and Push Docker Image on Tag

on:
  push:
    tags:
      - 'v*.*.*' # Esto activa el workflow cuando se empuja un tag que empieza con 'v' (ej. v1.0.0, v2.1.5)

jobs:
  build_and_push_docker_image:
    runs-on: ubuntu-latest # O el runner que prefieras (e.g., self-hosted)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Obtiene el código de tu repositorio

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract tag for Docker image
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: 980611/angular-docker-template # Reemplaza con tu usuario de Docker Hub y el nombre de tu repositorio
          tags: |
            type=ref,event=tag,pattern={{version}} # Esto toma el tag de Git (ej. v1.0.0) y lo usa como tag de Docker (ej. 1.0.0)
            type=raw,value=latest,enable=${{ endsWith(github.ref, '.0.0') }} # Opcional: Si el tag termina en .0.0 (ej. v1.0.0), también taggea como 'latest'

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: . # La ruta donde se encuentra tu Dockerfile ('.' si está en la raíz)
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          #cache-from: type=gha # Habilita el cache de GitHub Actions para builds más rápidos
          #cache-to: type=gha,mode=max